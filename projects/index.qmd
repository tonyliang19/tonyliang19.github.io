---
title: "Side Projects"
comments: false
toc: true
link-external-icon: false
number-sections: false
date: last-modified
date-format: "MMMM D, YYYY"
---

Here's a collection of my side projects and personal coding endeavors, spanning machine learning, computer vision, and web development. These projects showcase my technical skills and passion for building practical applications.

---

::: {.project-card}
::: {.grid}

::: {.g-col-12 .g-col-md-8}
### FIFA 22 Ultimate Team Recommender
::: {.project-tech}
**Technologies:** Python, BeautifulSoup, Scikit-learn, Streamlit
:::

This project scrapes FIFA player data from [SoFIFA](https://sofifa.com/) using `beautifulSoup` and `requests`, then applies unsupervised machine learning models to player statistics. The result is an interactive recommender system with UI that suggests FIFA22 players based on user constraints like budget, potential, and player attributes.

**Key Features:**
- Automated data pipeline for player statistics
- Unsupervised clustering for player similarity
- Interactive web interface for recommendations
- Budget and attribute filtering
:::

::: {.g-col-12 .g-col-md-4}
::: {.project-links}
**Links:**
- [{{< fa brands github >}} Source Code](https://github.com/FIFA22-UT-REC/fifa22-ultimate-team-recommender)
- [{{< fa globe >}} Live Demo](#)
:::

**Categories:** Machine Learning, Web Scraping, Recommender Systems
:::

:::
:::

---

::: {.grid}

::: {.g-col-12 .g-col-md-8}
### Pollen Image Recognition
**Technologies:** Python, Detectron2, PyTorch, Computer Vision

A deep learning project using the `detectron2` framework [@wu2019detectron2] for pollen species identification. The system processes high-resolution custom annotated images to recognize and classify different pollen species using convolutional neural networks.

**Key Features:**
- Custom image annotation pipeline
- High-resolution image processing
- Multi-species pollen classification
- Deep learning model training and evaluation
:::

::: {.g-col-12 .g-col-md-4}
**Links:**
- [{{< fa brands github >}} Source Code](https://github.com/tonyliang19/pollen_id)
- [{{< fa file-text >}} Documentation](#)

**Categories:** Computer Vision, Deep Learning, Bioinformatics
:::

:::

---

::: {.grid}

::: {.g-col-12 .g-col-md-8}
### Mock University Enrollment App
**Technologies:** Python, Flask, MongoDB, RESTful API

A full-stack web application simulating university enrollment processes. Built with Python `Flask` and `MongoDB` to explore web development fundamentals, including front-end/back-end interactions and NoSQL database management through RESTful APIs.

**Key Features:**
- Student enrollment management system
- RESTful API design
- NoSQL database integration
- Front-end and back-end separation
:::

::: {.g-col-12 .g-col-md-4}
**Links:**
- [{{< fa brands github >}} Source Code](https://github.com/tonyliang19/flask-web-app)
- [{{< fa presentation-screen >}} Demo](#)

**Categories:** Web Development, Database Design, API Development
:::

:::

---

*Projects last updated: `r format(Sys.time(), tz = "America/Los_Angeles")`*
